.mysql-template:
  services:
    - name: $DATABASE_ENGINE_VERSION
      command:
        - /bin/bash
        - -c
        - |
          mount -t tmpfs -o size=1024m tmpfs /var/lib/mysql
          docker-entrypoint.sh mysqld --default-authentication-plugin=mysql_native_password --log-bin-trust-function-creators=1
  # MySQL services variables
  variables:
    MYSQL_USER: user
    MYSQL_PASSWORD: testing-password
    MYSQL_ROOT_PASSWORD: testing-password2
    MYSQL_DATABASE: test
    DATASOURCES_DEFAULT_DATABASE: non_existing_database # to ensure that all tests run on the test datasource
    DATASOURCES_DEFAULT_USERNAME: $MYSQL_USER
    DATASOURCES_DEFAULT_PASSWORD: $MYSQL_PASSWORD
    DATASOURCES_DEFAULT_HOST: 127.0.0.1
    DATASOURCES_TEST_DATABASE: $MYSQL_DATABASE
    DATASOURCES_TEST_USERNAME: $MYSQL_USER
    DATASOURCES_TEST_PASSWORD: $MYSQL_PASSWORD
    DATASOURCES_TEST_HOST: 127.0.0.1
  before_script:
    - mysql -h $DATASOURCES_DEFAULT_HOST -u root -p$MYSQL_ROOT_PASSWORD -e "ALTER USER '$DATASOURCES_TEST_USERNAME'@'%' identified by '$DATASOURCES_TEST_PASSWORD';" mysql
    - mysql -h $DATASOURCES_DEFAULT_HOST -u root -p$MYSQL_ROOT_PASSWORD -e "GRANT ALL ON *.* to $DATASOURCES_TEST_USERNAME;" mysql

.postgres-template:
  services:
    - postgres:12.2-alpine
  # Postgres services variables
  variables:
    POSTGRES_DB: test
    POSTGRES_USER: user
    POSTGRES_PASSWORD: testing-password
    POSTGRES_HOST_AUTH_METHOD: trust
    DATASOURCES_DEFAULT_DATABASE: $POSTGRES_DB
    DATASOURCES_DEFAULT_USERNAME: $POSTGRES_USER
    DATASOURCES_DEFAULT_PASSWORD: $POSTGRES_PASSWORD
    DATASOURCES_DEFAULT_HOST: postgres
    DATASOURCES_TEST_DATABASE: $POSTGRES_DB
    DATASOURCES_TEST_USERNAME: $POSTGRES_USER
    DATASOURCES_TEST_PASSWORD: $POSTGRES_PASSWORD
    DATASOURCES_TEST_HOST: postgres
    DATASOURCES_DRIVER: Cake\Database\Driver\Postgres
    DATASOURCES_TEST_DRIVER: Cake\Database\Driver\Postgres
    DATASOURCES_DEFAULT_DRIVER: Cake\Database\Driver\Postgres
    DATASOURCES_PORT: 5432
    DATASOURCES_DEFAULT_PORT: 5432
    DATASOURCES_DEFAULT_ENCODING: 'utf8'
    DATASOURCES_TEST_ENCODING: 'utf8'
    DATASOURCES_TEST_PORT: 5432
  before_script:
    - apt-get install wget git unzip -yqq
    - sh -c 'echo "deb http://apt.postgresql.org/pub/repos/apt buster-pgdg main" > /etc/apt/sources.list.d/pgdg.list'
    - wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | tee ~/apt-pg.key
    - apt-key add  ~/apt-pg.key
    - apt-get update
    - apt-get install libpq-dev postgresql-client-12 -yqq
    - docker-php-ext-install pdo_pgsql
    - docker-php-ext-enable pdo_pgsql
    - printf "postgres:5432:test:user:testing-password" > ~/.pgpass
    - chmod 0600 ~/.pgpass

.test-template:
  stage: unit-test
  variables:
    # Passbolt unit test job common variables
    DEBUG: "true"
    PASSBOLT_GPG_SERVER_KEY_PUBLIC: config/gpg/unsecure.key
    PASSBOLT_GPG_SERVER_KEY_PRIVATE: config/gpg/unsecure_private.key
    APP_FULL_BASE_URL: http://127.0.0.1
    PASSBOLT_REGISTRATION_PUBLIC: 1
    PASSBOLT_SELENIUM_ACTIVE: 1
    PASSBOLT_PLUGINS_JWT_AUTHENTICATION_ENABLED: 1 # Remove that line once JWT is enabled by default
    # This is the development dummy fingerprint
    PASSBOLT_GPG_SERVER_KEY_FINGERPRINT: 2FC8945833C51946E937F9FED47B0811573EE67E
    PHPUNIT_COMMAND: vendor/bin/phpunit --log-junit unitreport.xml
  image: $CI_REGISTRY_IMAGE_TEST:$PHP_VERSION
  script:
    - cp config/app.default.php config/app.php
    - composer install --dev --no-interaction
    - gpg --import config/gpg/unsecure_private.key
    - gpg --import config/gpg/unsecure.key
    - ./bin/cake passbolt create_jwt_keys -q
    - $PHPUNIT_COMMAND
  only:
    - branches
  artifacts:
    reports:
      junit: unitreport.xml
  except:
    variables:
      - $CI_COMMIT_MESSAGE =~ /skip-unit/


php7.4-mariadb10.5:
  variables:
    PHP_VERSION: "7.4"
    DATABASE_ENGINE_VERSION: "mariadb:10.5"
  extends:
    - .mysql-template
    - .test-template
  except:
    variables:
      - $TEST_DISABLED
  only:
    - develop
    - master

php7.4-mariadb10.4:
  variables:
    PHP_VERSION: "7.4"
    DATABASE_ENGINE_VERSION: "mariadb:10.4"
  extends:
    - .mysql-template
    - .test-template
  except:
    variables:
      - $TEST_DISABLED
  only:
    - develop
    - master

php7.3-mariadb10.4:
  variables:
    PHP_VERSION: "7.3"
    DATABASE_ENGINE_VERSION: "mariadb:10.4"
  extends:
    - .mysql-template
    - .test-template
  except:
    variables:
      - $TEST_DISABLED
  only:
    - develop
    - master

php7.4-mariadb10.3:
  variables:
    PHP_VERSION: "7.4"
    DATABASE_ENGINE_VERSION: "mariadb:10.3"
  extends:
    - .mysql-template
    - .test-template

php7.3-mysql5.7:
  variables:
    PHP_VERSION: "7.3"
    DATABASE_ENGINE_VERSION: "mysql:5.7"
  extends:
    - .mysql-template
    - .test-template

php7.4-mysql8:
  variables:
    PHP_VERSION: "7.4"
    DATABASE_ENGINE_VERSION: "mysql:8.0"
  extends:
    - .mysql-template
    - .test-template
  except:
    variables:
      - $TEST_DISABLED
  only:
    - develop
    - master

php7.4-postgres:
  variables:
    PHP_VERSION: "7.4"
  extends:
    - .postgres-template
    - .test-template
